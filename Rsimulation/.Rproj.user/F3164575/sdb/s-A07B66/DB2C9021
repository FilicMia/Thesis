{
    "collab_server" : "",
    "contents" : "# S1\nx1 = 7766188.44\ny1 = -21960535.34\nz1 = 12522838.56\n# S2\nx2 = -25922679.66\ny2 = -6629461.28\nz2 = 31864.37\n# S3\nx3 = -5743774.02\ny3 = -25828319.92\nz3 = 1692757.72\n# S4\nx4 = -2786005.69\ny4 = -15900725.80\nz4 = 21302003.49\n# Pseudoranges\nrho1 = 22228206.42\nrho2 = 24096139.11\nrho3 = 21729070.63\nrho4 = 21259581.09\n\n########################\nx1 = 2088202.299\ny1 = -11757191.370\nz1 = 25391471.881\n# S2\nx2 = 11092568.240\ny2 = -14198201.090\nz2 = 21471165.950\n# S3\nx3 = 35606984.591\ny3 = -4447027.239\nz3 = 9101378.572\n# S4\nx4 = 3966929.048\ny4 = 7362851.831\nz4 = 26388447.172\n# Pseudoranges\nrho1 = 23204698.51 #calculated from PRN codes\nrho2 = 21585835.37\nrho3 = 31364260.01\nrho4 = 24966798.73\n\n\n# TO DO: Reading sat co-ordinates and pseudoranges from files using:\n# data <- read.csv(\"G:\\\\satellites.dat\", header = FALSE, sep = ' ')\n\n# Physical constants\nc = 299792458 # 300000000 #na prvom linku je 1\nR = 6378137\n\n# Initial values of errors\ndelta_x = 11\ndelta_y = 11\ndelta_z = 11\ndelta_t = 11\n\n# Initial values for iteration\nxk = 0\nyk = 0\nzk = 0\ntk = 0\n\n#\nC = diag(4)\ndelta = 3;\n\n# Loop until error is less than or equal to 1 m - provisional\nwhile (abs(delta) > 1) { # TO DO: Assure that all the errors are below 1 m\n  #simple iteration as in https://www.u-blox.com/sites/default/files/products/documents/GPS-Compendium_Book_%28GPS-X-02007%29.pdf\n  #expected error is 0.\n  R1 = sqrt((xk - x1) ** 2 + (yk - y1) ** 2 + (zk - z1) ** 2)\n  R2 = sqrt((xk - x2) ** 2 + (yk - y2) ** 2 + (zk - z2) ** 2)\n  R3 = sqrt((xk - x3) ** 2 + (yk - y3) ** 2 + (zk - z3) ** 2)\n  R4 = sqrt((xk - x4) ** 2 + (yk - y4) ** 2 + (zk - z4) ** 2)\n  \n  ax1 = (xk - x1) / R1 #U prvom link rho_j i R_j su zamjenjeni\n  ay1 = (yk - y1) / R1\n  az1 = (zk - z1) / R1\n  \n  ax2 = (xk - x2) / R2\n  ay2 = (yk - y2) / R2\n  az2 = (zk - z2) / R2\n  \n  ax3 = (xk - x3) / R3\n  ay3 = (yk - y3) / R3\n  az3 = (zk - z3) / R3\n  \n  ax4 = (xk - x4) / R4\n  ay4 = (yk - y4) / R4\n  az4 = (zk - z4) / R4\n  \n  delta_rho = matrix(c(rho1 - R1, rho2 - R2,\n                       rho3 - R3, rho4 - R4),\n                     nrow = 4, ncol = 1, byrow = TRUE)\n  # Matrix H (or G) \n  #TO DO: Least-Sqaures Adjustment for n (number of satellites) > 4 in a form:\n  #x = (GT G)^(-1) GT y\n  H = matrix(c(ax1, ay1, az1, c,\n               ax2, ay2, az2, c,\n               ax3, ay3, az3, c,\n               ax4, ay4, az4, c),\n              nrow = 4, ncol = 4, byrow = TRUE)\n  \n  # Inverse of matrix H\n  Hinv = solve(H)\n  \n  # Dot product of inversed matrix H and calculated pseudoranges\n  dx = Hinv %*% C %*% delta_rho\n  \n  # Errors\n  delta_x = dx[1]\n  delta_y = dx[2]\n  delta_z = dx[3]\n  delta_t = dx[4]\n  \n  # Pseudorange calculation\n  rho1 = R1 + ax1 * delta_x + ay1 * delta_y + az1 * delta_z\n  rho2 = R2 + ax2 * delta_x + ay2 * delta_y + az2 * delta_z\n  rho3 = R3 + ax3 * delta_x + ay3 * delta_y + az3 * delta_z\n  rho4 = R4 + ax4 * delta_x + ay4 * delta_y + az4 * delta_z\n  \n  # Calculating coordinates for next iteration step\n  xk = xk + delta_x #formula 6.7 iz prvog linka\n  yk = yk + delta_y\n  zk = zk + delta_z\n  tk = tk + delta_t\n  delta = max(c(delta_x,delta_y,delta_z,delta_t));  \n\n  print (\"This iteration position estimation: \")\n  print (c(xk, yk, zk, tk))\n  print(\"Each coordinate error: \");\n  print (c(delta_x, delta_y, delta_z))\n}\n\n# Calculating latitude and longitude and converting from radians to degrees\nlat = asin(zk / R) * (180 / pi)\nlon = atan2(yk, xk) * (180 / pi)\n\nprint (c(lat, lon))\n\n#TO DO: data collection for graphical presentation of:\n# - efficiency of the iteration algorithm\n# - position estimation accuracy\n\n",
    "created" : 1492350910838.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2017076904",
    "id" : "DB2C9021",
    "lastKnownWriteTime" : 1492424712,
    "last_content_update" : 1492424712258,
    "path" : "~/Documents/Diplomski/Rsimulation/baska1.R",
    "project_path" : "baska1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}